/*******************************
* color
********************************/
@function is-white($color) {
    $rgb: red($color), green($color), blue($color);
    @return $rgb ==(255, 255, 255);
}

@function is-light($color) {
    @return color.channel($color, "lightness", $space: hsl)>50;
}

@function get-light-color($color, $scale: 30%) {
    @return color.adjust($color, $lightness: $scale);
}

@function get-dark-color($color, $scale: 30%) {
    @return color.adjust($color, $lightness: $scale * -1);
}

@function get-similar-color($color, $scale: 30%) {
    @return if(is-light($color), get-dark-color($color, $scale), get-light-color($color, $scale));
}

// mixin
@mixin set-active-color($color) {
    &:not(:disabled) {
        &:hover {
            background-color: get-similar-color($color);

            &:active {
                background-color: get-similar-color($color, 20%);
            }
        }

        &.active,
        &:active {
            background-color: get-similar-color($color, 20%);

            &:hover {
                background-color: get-similar-color($color);

                &:active {
                    background-color: get-similar-color($color, 20%);
                }
            }
        }
    }

    &.disabled {
        color: white;
        background-color: lightgray;
        border-color: lightgray;
    }

    transition: .2s;
}

@mixin set-outline-color($color, $is-active: false) {
    &.outline {
        color: $color;
        background-color: white;

        @if($is-active == true) {
            @include set-active-color($color);
        }
    }
}

@mixin set-exciting-color($color, $is-active: false) {
    color: if(is-light($color), white, get-light-color($color, 80%));
    background-color: $color;
    border: 1px $color solid;

    @if($is-active == true) {
        @include set-active-color($color);
    }
}

/*******************************
* layout
********************************/